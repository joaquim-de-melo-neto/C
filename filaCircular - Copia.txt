#include <stdlib.h>

typedef struct {
    int* data;  // vetor que armazena os elementos da fila
    int head;   // índice do primeiro elemento da fila
    int tail;   // índice do último elemento da fila
    int size;   // tamanho máximo da fila
} Queue;

Queue* createQueue(int size) {
    Queue* q = (Queue*) malloc(sizeof(Queue));
    q->data = (int*) malloc(size * sizeof(int));
    q->head = 0;
    q->tail = 0;
    q->size = size;
    return q;
}

void destroyQueue(Queue* q) {
    free(q->data);
    free(q);
}

int queueSize(Queue* q) {
    return (q->tail - q->head + q->size) % q->size;
}

int dequeue(Queue* q) {
    if (q->head == q->tail) {
        // fila vazia, retorna um valor inválido (pode ser ajustado para a necessidade do problema)
        return -1;
    }
    int result = q->data[q->head];
    q->head = (q->head + 1) % q->size;
    return result;
}

void enqueue(Queue* q, int value) {
    if ((q->tail + 1) % q->size == q->head) {
        // fila cheia, não faz nada (pode ser ajustado para a necessidade do problema)
        return;
    }
    q->data[q->tail] = value;
    q->tail = (q->tail + 1) % q->size;
}
